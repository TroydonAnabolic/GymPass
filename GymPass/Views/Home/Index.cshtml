@model GymPass.Models.Facility

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Home Page";
}

@* Start Navigation *@
@if (SignInManager.IsSignedIn(User))
{
    <nav class="main-nav">
        <i class="fa fa-bars" onclick="openNav()"></i>
    </nav>

    <div id="mySidenav" class="sidenav">
        <a href="javascript:void(0)" class="closebtn" onclick="closeNav()">&times;</a>
        <div class="nav-other">
            <a class="border-nav" href="#">Unlock Door</a>
            <a class="border-nav" href="#">Select Facility</a>
            <a class="border-nav" href="#">Dashboard</a>
        </div>
        @*<div >
                <a href="#">Contact</a>
            </div>*@

        <form id="logout-main" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button type="submit" class="nav-link btn text-light main-logout">
                <i class="fas fa-sign-out-alt"></i>
                Logout
            </button>
        </form>
    </div>

    @* End Navigation *@

    @* Blur out the main gym icon when not inside *@
    <div class="@(@UserManager.GetUserAsync(User).Result.IsInsideGym ? " main-gym" : "not-in-use")">
        <div class="main-gym-icon">
            <div class="title-name">
                GYM PASS
            </div>


            <div class="main-pop-cont">
                <div class="realtime-indicator">
                    <div class="realtime-icons">
                        <img src="~/images/dumbbell.png" />
                    </div>
                    15
                </div>
                <div class="realtime-indicator">
                    <div class="realtime-icons">
                        <img src="~/images/icons8-treadmill-100.png" />
                    </div>
                    20
                </div>
                <div class="realtime-indicator">
                    <div class="realtime-icons">
                        <img src="~/images/icons8-warm-up-100.png" />
                    </div>
                    5
                </div>
                <div class="realtime-indicator">
                    <div class="realtime-icons">
                        <img src="~/images/Capacity/capacity-80.png" />
                    </div>
                    @Model.NumberOfClientsInGym
                </div>
            </div>
        </div>
    </div>

    <div class="access">
        <div class="access-container">
            @{
                // If the door is not currently opened show the lock symbol
                if (!ViewBag.DoorOpened)
                {
                    // Hide these form inputs and automatically post set values on click

                    <form asp-action="Index">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="hidden" asp-for="FacilityID" />

                        <div class="form-group form-check hidden">
                            <label class="form-check-label">
                                <input id="open-door" class="form-check-input" asp-for="IsOpenDoorRequested" /> @Html.DisplayNameFor(model => model.IsOpenDoorRequested)
                            </label>
                        </div>

                        @if (@UserManager.GetUserAsync(User).Result.AccessGrantedToFacility)
                        {
                            // open a modal with further form groups asking for training duration and equipment to use with a continue button to close modal.
                            
                        }

                        <div class="form-group">
                            <button type="submit" class="locked nav-link btn">
                                <i class="fa fa-lock"></i>
                            </button>
                        </div>
                    </form>
                    // TODO:
                    //  ViewBag.CompletedGymEntries = false;
                    // make a partial view here, inside the partial view, have a modal inside with a separate form, this will allow you to select what you will lose
                    // there will be an option to skip for those who wish to skip it
                    // within the modal, have the form submit button to complete the modal post and set the ViewBad.CompletedGymEntries = true,
                    // inside the control use an await statement to ensure, redirect to page is not
                    // executed until the modal is posted, and the value of ViewBag.CompletedGymEntries is done.
                }
                // if the door is opened show the unlocked symbol
                else if (ViewBag.DoorOpened)
                {
                    <form asp-action="Index">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <input type="hidden" asp-for="FacilityID" />
                        <div class="form-group form-check hidden">
                            <label class="form-check-label">
                                <input id="deep-lens-scan" class="form-check-input" asp-for="IsOpenDoorRequested " /> @Html.DisplayNameFor(model => model.IsOpenDoorRequested)
                            </label>
                        </div>
                        <div class="form-group">
                            <button type="submit" class="unlocked nav-link btn">
                                <i class="fas fa-lock-open"></i>
                            </button>
                        </div>
                    </form>
                }
            }

            <br />
            <div class="progress">
                <div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width: 100%"></div>
            </div>
            @* TODO This alert comes up if unauthorized personell enters, when someone else enters, will use button on screen saying Entered gym (with a hidden attribute so it does not ruin UI),
        that will be revealed during testing to trigger theoretical camera, however we presume the camera sensor does what button does
          Also make the camera Highlight in red and grow and shrink when access failed for 5 seconds *@

            @{
                // TODO : Change this to use javascript and the inner will be c#
                if (true)
                {
                    // use javascript to show scanning for 3 seconds instead TODO
                    <div class="door-status temp-scan hidden">
                        SCANNING
                    </div>
                    // access is granted is shown when the server has access granted
                    if (@UserManager.GetUserAsync(User).Result.AccessGrantedToFacility)
                    {
                        <div class="door-status">
                            WELCOME @UserManager.GetUserAsync(User).Result.FirstName!
                        </div>
                    }
                    else if (!@UserManager.GetUserAsync(User).Result.AccessGrantedToFacility) // show access denied for 3 seconds
                    {
                        <div class="door-status">
                            ACCESS DENIED!
                        </div>
                    }
                }
                // if open door was not requested when show nothing
                else if (!Model.IsOpenDoorRequested)
                {
                    <div class="door-status">
                    </div>
                }
            }
        </div>
    </div>
}

@* Hide the top navigation bar when on main page *@
<script>
    $(document).ready(function () {
        $("header").hide();

    });
</script>
